require "wgpu"

## local function make_RendererImplT(ImplT)
  ## static_assert(ImplT.value.is_renderer_impl, "passed in type %s is not a renderer implementation!", ImplT.value)

  local ImplT: type = #[ImplT]#

  local RendererImplT = @record{
    impl: ImplT,

    device: WGPUDevice,
    queue: WGPUQueue,

    target_config: record{
      format: WGPUTextureFormat,
      width: uint32,
      height: uint32,
    },
  }

  function RendererImplT:init(device: WGPUDevice, target_format: WGPUTextureFormat, target_width: uint32, target_height: uint32): void
    self.device = device
    self.queue = wgpuDeviceGetQueue(device)

    self.target_config = {
      format = target_format,
      width = target_width,
      height = target_height,
    }
  end

  function RendererImplT:prepare(): void
  end

  function RendererImplT:render(): void
  end

  ## return RendererImplT
## end

return #[generalize(make_RendererImplT)]#
