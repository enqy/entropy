require "wgpu"

local Render: type = @record{
  instance: WGPUInstance,
}

function Render:init_default(): void
  self.instance = wgpuCreateInstance(&(@WGPUInstanceDescriptor){});
end

function Render:cleanup(): void
  wgpuInstanceDrop(self.instance)
end

function Render:request_adapter_device(surface: WGPUSurface): (WGPUAdapter, WGPUDevice)
  -- request adapter
  print("requesting adapter")
  local adapter: WGPUAdapter
  wgpuInstanceRequestAdapter(
    self.instance,
    &(@WGPURequestAdapterOptions){
      powerPreference = WGPUPowerPreference_HighPerformance,
      compatibleSurface = surface,
      forceFallbackAdapter = false,
    },
    function (status: WGPURequestAdapterStatus, received: WGPUAdapter, message: cstring, userdata: pointer): void
      print("adapter status: ", tostring(status), " | message: ", tostring(message))
      $(@*WGPUAdapter)(userdata) = received
    end,
    &adapter
  )

  -- wait for adapter
  while not adapter do end

  -- request device
  print("requesting device")
  local device: WGPUDevice
  wgpuAdapterRequestDevice(
    adapter,
    nilptr,
    function (status: WGPURequestDeviceStatus, received: WGPUDevice, message: cstring, userdata: pointer): void
      print("device status: ", tostring(status), " | message: ", message)
      $(@*WGPUDevice)(userdata) = received
    end,
    &device
  )

  -- wait for device
  while not device do end

  return adapter, device
end

return Render
